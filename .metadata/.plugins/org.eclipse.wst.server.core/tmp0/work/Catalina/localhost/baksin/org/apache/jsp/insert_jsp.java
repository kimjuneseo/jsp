/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2022-05-08 13:34:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1652010805556L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1652010955650L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/common.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	<h2>(과정평가형 정보처리산업기사) 백신접종예약 프로그램 ver 2021-08</h2>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<div><a href=\"insert.jsp\">백신접종예약</a></div>\r\n");
      out.write("		<div><a href=\"baksinSelect.jsp\">접종예약조회</a></div>\r\n");
      out.write("		<div><a href=\"select.jsp\">접종인원통계</a></div>\r\n");
      out.write("		<div><a href=\"index.jsp\">홈으로</a></div>\r\n");
      out.write("	</nav>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<section>\r\n");
      out.write("	<h2 class=\"title\">백신접종예약</h2>\r\n");
      out.write("	<form action=\"insert_action.jsp\" method=\"post\" onsubmit=\"return fromChk();\" name=\"insert_form\">\r\n");
      out.write("		<table border=\"1px\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">접종예약번호</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"num\">예) 20210001</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">주민번호</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"jumin\">예) 710101-1000001</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">백신코드</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"b_code\">예) V0001 ~  V0003</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">병원코드</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"h_code\">예) H0001</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">예약일자</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"date\">예) 20211231</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align: center;\">예약시간</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"time\">예) 1230</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" style=\"text-align: center;\">\r\n");
      out.write("					<button type=\"submit\">등록</button>\r\n");
      out.write("					<button type=\"button\" onclick=\"reset()\">다시쓰기</button>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</section>\r\n");
      out.write("<footer>\r\n");
      out.write("	<div>HRDKOREA Copyright @ 2021 All rights reserved. Human Resources Development Service of Korea</div>\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write(" 	function fromChk(){\r\n");
      out.write("		const form = document.insert_form;\r\n");
      out.write("		try{\r\n");
      out.write("			if(!form[0].value){\r\n");
      out.write("				throw '접종예약번호가 입력되지 않았습니다';\r\n");
      out.write("			}else if(!form[1].value){\r\n");
      out.write("				throw '주민번호가 입력되지 않았습니다';\r\n");
      out.write("			}else if(!form[2].value){\r\n");
      out.write("				throw '백신코드가 입력되지 않았습니다';\r\n");
      out.write("			}else if(!form[3].value){\r\n");
      out.write("				throw '병원코드가 입력되지 않았습니다';\r\n");
      out.write("			}else if(!form[4].value){\r\n");
      out.write("				throw '예약 일자가 입력되지 않았습니다';\r\n");
      out.write("			}else if(!form[5].value){\r\n");
      out.write("				throw '예약시간이 입력되지 않았습니다';\r\n");
      out.write("			}\r\n");
      out.write("		}catch(e){\r\n");
      out.write("			alert(e);\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("			return true;\r\n");
      out.write("	}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
